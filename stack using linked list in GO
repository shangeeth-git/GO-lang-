package main
import "fmt"

type node struct{
    data int
    next *node
}

type llist struct{
    head *node
}
func (element *llist) push(value *node){
    value.next=element.head
    element.head=value
}
func (element *llist) pop() {
    temp:=element.head
    if(element.head!=nil){
        element.head=temp.next
    }
}
func (element *llist) peek()(int){
    if(element.head!=nil)
        return element.head.data
    return -1
}
func main(){
    list:=llist{}
    var choice,data1 int
    i:=1
    for i==1{
        fmt.Println("enter choice\n1. push\n2.pop\n3.peek\n4.exit")
        fmt.Scan(&choice)
        switch choice{
            case 1: 
                    fmt.Println("enter new entry")
                    fmt.Scan(&data1)
                    temp:=&node{data:data1,next:nil}
                    list.push(temp)
            case 2:
                    list.pop()
                    fmt.Printl("popped successfully")
            case 3:
                    fmt.Println(list.peek())
            case 4:
                    i=0
        }
    }
    fmt.Println("exit success")
}
